// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/security.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Security.API {

  /// <summary>Holder for reflection information generated from protos/security.proto</summary>
  public static partial class SecurityReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/security.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SecurityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcm90b3Mvc2VjdXJpdHkucHJvdG8SCHNlY3VyaXR5Ih8KC0hhc2hSZXF1",
            "ZXN0EhAKCHBhc3N3b3JkGAEgASgJIhwKDEhhc2hSZXNwb25zZRIMCgRoYXNo",
            "GAEgASgJIjMKEVZlcmlmeUhhc2hSZXF1ZXN0EhAKCHBhc3N3b3JkGAEgASgJ",
            "EgwKBGhhc2gYAiABKAkiJQoSVmVyaWZ5SGFzaFJlc3BvbnNlEg8KB2lzVmFs",
            "aWQYASABKAgidgoWVG9rZW5HZW5lcmF0aW9uUmVxdWVzdBI2CgZjbGFpbXMY",
            "ASADKAsyJi5zZWN1cml0eS5Ub2tlbkdlbmVyYXRpb25SZXF1ZXN0LkNsYWlt",
            "GiQKBUNsYWltEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkiNQoXVG9r",
            "ZW5HZW5lcmF0aW9uUmVzcG9uc2USGgoDand0GAEgASgLMg0uc2VjdXJpdHku",
            "Snd0IjQKFlRva2VuVmFsaWRhdGlvblJlcXVlc3QSGgoDand0GAEgASgLMg0u",
            "c2VjdXJpdHkuSnd0IioKF1Rva2VuVmFsaWRhdGlvblJlc3BvbnNlEg8KB2lz",
            "VmFsaWQYASABKAgiKgoDSnd0Eg4KBnNjaGVtYRgBIAEoCRITCgthY2Nlc3NU",
            "b2tlbhgCIAEoCSKaAQoPR2V0VXNlcnNSZXF1ZXN0EhoKAklkGAEgASgLMg4u",
            "c2VjdXJpdHkuVVVJRBIQCgh1c2VybmFtZRgCIAEoCRIRCglmaXJzdG5hbWUY",
            "AyABKAkSEAoIbGFzdG5hbWUYBCABKAkSIgoKY3VzdG9tZXJJZBgFIAEoCzIO",
            "LnNlY3VyaXR5LlVVSUQSEAoIc3RhdHVzSWQYBiABKAUiMQoQR2V0VXNlcnNS",
            "ZXNwb25zZRIdCgV1c2VycxgBIAMoCzIOLnNlY3VyaXR5LlVzZXIifQoOQWRk",
            "VXNlclJlcXVlc3QSEAoIdXNlcm5hbWUYASABKAkSEQoJZmlyc3RuYW1lGAIg",
            "ASgJEhAKCGxhc3RuYW1lGAMgASgJEiIKCmN1c3RvbWVySWQYBCABKAsyDi5z",
            "ZWN1cml0eS5VVUlEEhAKCHN0YXR1c0lkGAUgASgFIi0KD0FkZFVzZXJSZXNw",
            "b25zZRIaCgJpZBgBIAEoCzIOLnNlY3VyaXR5LlVVSUQijwEKBFVzZXISGgoC",
            "SWQYASABKAsyDi5zZWN1cml0eS5VVUlEEhAKCHVzZXJuYW1lGAIgASgJEhEK",
            "CWZpcnN0bmFtZRgDIAEoCRIQCghsYXN0bmFtZRgEIAEoCRIiCgpjdXN0b21l",
            "cklkGAUgASgLMg4uc2VjdXJpdHkuVVVJRBIQCghzdGF0dXNJZBgGIAEoBSIV",
            "CgRVVUlEEg0KBXZhbHVlGAEgASgJMpkBCg1DcnlwdG9TZXJ2aWNlEj0KCkNy",
            "ZWF0ZUhhc2gSFS5zZWN1cml0eS5IYXNoUmVxdWVzdBoWLnNlY3VyaXR5Lkhh",
            "c2hSZXNwb25zZSIAEkkKClZlcmlmeUhhc2gSGy5zZWN1cml0eS5WZXJpZnlI",
            "YXNoUmVxdWVzdBocLnNlY3VyaXR5LlZlcmlmeUhhc2hSZXNwb25zZSIAMr4B",
            "CgxUb2tlblNlcnZpY2USVgoNR2VuZXJhdGVUb2tlbhIgLnNlY3VyaXR5LlRv",
            "a2VuR2VuZXJhdGlvblJlcXVlc3QaIS5zZWN1cml0eS5Ub2tlbkdlbmVyYXRp",
            "b25SZXNwb25zZSIAElYKDVZhbGlkYXRlVG9rZW4SIC5zZWN1cml0eS5Ub2tl",
            "blZhbGlkYXRpb25SZXF1ZXN0GiEuc2VjdXJpdHkuVG9rZW5WYWxpZGF0aW9u",
            "UmVzcG9uc2UiADKUAQoLVXNlclNlcnZpY2USQwoIR2V0VXNlcnMSGS5zZWN1",
            "cml0eS5HZXRVc2Vyc1JlcXVlc3QaGi5zZWN1cml0eS5HZXRVc2Vyc1Jlc3Bv",
            "bnNlIgASQAoHQWRkVXNlchIYLnNlY3VyaXR5LkFkZFVzZXJSZXF1ZXN0Ghku",
            "c2VjdXJpdHkuQWRkVXNlclJlc3BvbnNlIgBCD6oCDFNlY3VyaXR5LkFQSWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.HashRequest), global::Security.API.HashRequest.Parser, new[]{ "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.HashResponse), global::Security.API.HashResponse.Parser, new[]{ "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.VerifyHashRequest), global::Security.API.VerifyHashRequest.Parser, new[]{ "Password", "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.VerifyHashResponse), global::Security.API.VerifyHashResponse.Parser, new[]{ "IsValid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.TokenGenerationRequest), global::Security.API.TokenGenerationRequest.Parser, new[]{ "Claims" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.TokenGenerationRequest.Types.Claim), global::Security.API.TokenGenerationRequest.Types.Claim.Parser, new[]{ "Name", "Value" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.TokenGenerationResponse), global::Security.API.TokenGenerationResponse.Parser, new[]{ "Jwt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.TokenValidationRequest), global::Security.API.TokenValidationRequest.Parser, new[]{ "Jwt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.TokenValidationResponse), global::Security.API.TokenValidationResponse.Parser, new[]{ "IsValid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.Jwt), global::Security.API.Jwt.Parser, new[]{ "Schema", "AccessToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.GetUsersRequest), global::Security.API.GetUsersRequest.Parser, new[]{ "Id", "Username", "Firstname", "Lastname", "CustomerId", "StatusId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.GetUsersResponse), global::Security.API.GetUsersResponse.Parser, new[]{ "Users" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.AddUserRequest), global::Security.API.AddUserRequest.Parser, new[]{ "Username", "Firstname", "Lastname", "CustomerId", "StatusId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.AddUserResponse), global::Security.API.AddUserResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.User), global::Security.API.User.Parser, new[]{ "Id", "Username", "Firstname", "Lastname", "CustomerId", "StatusId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Security.API.UUID), global::Security.API.UUID.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HashRequest : pb::IMessage<HashRequest> {
    private static readonly pb::MessageParser<HashRequest> _parser = new pb::MessageParser<HashRequest>(() => new HashRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HashRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest(HashRequest other) : this() {
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest Clone() {
      return new HashRequest(this);
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 1;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HashRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HashRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Password.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HashRequest other) {
      if (other == null) {
        return;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HashResponse : pb::IMessage<HashResponse> {
    private static readonly pb::MessageParser<HashResponse> _parser = new pb::MessageParser<HashResponse>(() => new HashResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HashResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse(HashResponse other) : this() {
      hash_ = other.hash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse Clone() {
      return new HashResponse(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HashResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HashResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HashResponse other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyHashRequest : pb::IMessage<VerifyHashRequest> {
    private static readonly pb::MessageParser<VerifyHashRequest> _parser = new pb::MessageParser<VerifyHashRequest>(() => new VerifyHashRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyHashRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashRequest(VerifyHashRequest other) : this() {
      password_ = other.password_;
      hash_ = other.hash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashRequest Clone() {
      return new VerifyHashRequest(this);
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 1;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyHashRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyHashRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Password != other.Password) return false;
      if (Hash != other.Hash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Password.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Password);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyHashRequest other) {
      if (other == null) {
        return;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Password = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyHashResponse : pb::IMessage<VerifyHashResponse> {
    private static readonly pb::MessageParser<VerifyHashResponse> _parser = new pb::MessageParser<VerifyHashResponse>(() => new VerifyHashResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyHashResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashResponse(VerifyHashResponse other) : this() {
      isValid_ = other.isValid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyHashResponse Clone() {
      return new VerifyHashResponse(this);
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 1;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyHashResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyHashResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsValid != other.IsValid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsValid != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyHashResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenGenerationRequest : pb::IMessage<TokenGenerationRequest> {
    private static readonly pb::MessageParser<TokenGenerationRequest> _parser = new pb::MessageParser<TokenGenerationRequest>(() => new TokenGenerationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenGenerationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationRequest(TokenGenerationRequest other) : this() {
      claims_ = other.claims_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationRequest Clone() {
      return new TokenGenerationRequest(this);
    }

    /// <summary>Field number for the "claims" field.</summary>
    public const int ClaimsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Security.API.TokenGenerationRequest.Types.Claim> _repeated_claims_codec
        = pb::FieldCodec.ForMessage(10, global::Security.API.TokenGenerationRequest.Types.Claim.Parser);
    private readonly pbc::RepeatedField<global::Security.API.TokenGenerationRequest.Types.Claim> claims_ = new pbc::RepeatedField<global::Security.API.TokenGenerationRequest.Types.Claim>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Security.API.TokenGenerationRequest.Types.Claim> Claims {
      get { return claims_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenGenerationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenGenerationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!claims_.Equals(other.claims_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= claims_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      claims_.WriteTo(output, _repeated_claims_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += claims_.CalculateSize(_repeated_claims_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenGenerationRequest other) {
      if (other == null) {
        return;
      }
      claims_.Add(other.claims_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            claims_.AddEntriesFrom(input, _repeated_claims_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TokenGenerationRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Claim : pb::IMessage<Claim> {
        private static readonly pb::MessageParser<Claim> _parser = new pb::MessageParser<Claim>(() => new Claim());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Claim> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Security.API.TokenGenerationRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Claim() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Claim(Claim other) : this() {
          name_ = other.name_;
          value_ = other.value_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Claim Clone() {
          return new Claim(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Claim);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Claim other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Value != other.Value) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Claim other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TokenGenerationResponse : pb::IMessage<TokenGenerationResponse> {
    private static readonly pb::MessageParser<TokenGenerationResponse> _parser = new pb::MessageParser<TokenGenerationResponse>(() => new TokenGenerationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenGenerationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationResponse(TokenGenerationResponse other) : this() {
      Jwt = other.jwt_ != null ? other.Jwt.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenGenerationResponse Clone() {
      return new TokenGenerationResponse(this);
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 1;
    private global::Security.API.Jwt jwt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.Jwt Jwt {
      get { return jwt_; }
      set {
        jwt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenGenerationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenGenerationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jwt, other.Jwt)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jwt_ != null) hash ^= Jwt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (jwt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jwt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jwt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jwt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenGenerationResponse other) {
      if (other == null) {
        return;
      }
      if (other.jwt_ != null) {
        if (jwt_ == null) {
          jwt_ = new global::Security.API.Jwt();
        }
        Jwt.MergeFrom(other.Jwt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (jwt_ == null) {
              jwt_ = new global::Security.API.Jwt();
            }
            input.ReadMessage(jwt_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenValidationRequest : pb::IMessage<TokenValidationRequest> {
    private static readonly pb::MessageParser<TokenValidationRequest> _parser = new pb::MessageParser<TokenValidationRequest>(() => new TokenValidationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenValidationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationRequest(TokenValidationRequest other) : this() {
      Jwt = other.jwt_ != null ? other.Jwt.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationRequest Clone() {
      return new TokenValidationRequest(this);
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 1;
    private global::Security.API.Jwt jwt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.Jwt Jwt {
      get { return jwt_; }
      set {
        jwt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenValidationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenValidationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jwt, other.Jwt)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jwt_ != null) hash ^= Jwt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (jwt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jwt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jwt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jwt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenValidationRequest other) {
      if (other == null) {
        return;
      }
      if (other.jwt_ != null) {
        if (jwt_ == null) {
          jwt_ = new global::Security.API.Jwt();
        }
        Jwt.MergeFrom(other.Jwt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (jwt_ == null) {
              jwt_ = new global::Security.API.Jwt();
            }
            input.ReadMessage(jwt_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenValidationResponse : pb::IMessage<TokenValidationResponse> {
    private static readonly pb::MessageParser<TokenValidationResponse> _parser = new pb::MessageParser<TokenValidationResponse>(() => new TokenValidationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenValidationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationResponse(TokenValidationResponse other) : this() {
      isValid_ = other.isValid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenValidationResponse Clone() {
      return new TokenValidationResponse(this);
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 1;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenValidationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenValidationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsValid != other.IsValid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsValid != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenValidationResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Jwt : pb::IMessage<Jwt> {
    private static readonly pb::MessageParser<Jwt> _parser = new pb::MessageParser<Jwt>(() => new Jwt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Jwt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwt(Jwt other) : this() {
      schema_ = other.schema_;
      accessToken_ = other.accessToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwt Clone() {
      return new Jwt(this);
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 1;
    private string schema_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schema {
      get { return schema_; }
      set {
        schema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Jwt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Jwt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Schema != other.Schema) return false;
      if (AccessToken != other.AccessToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Schema.Length != 0) hash ^= Schema.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Schema.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Schema);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Schema.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schema);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Jwt other) {
      if (other == null) {
        return;
      }
      if (other.Schema.Length != 0) {
        Schema = other.Schema;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Schema = input.ReadString();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUsersRequest : pb::IMessage<GetUsersRequest> {
    private static readonly pb::MessageParser<GetUsersRequest> _parser = new pb::MessageParser<GetUsersRequest>(() => new GetUsersRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUsersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersRequest(GetUsersRequest other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      username_ = other.username_;
      firstname_ = other.firstname_;
      lastname_ = other.lastname_;
      CustomerId = other.customerId_ != null ? other.CustomerId.Clone() : null;
      statusId_ = other.statusId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersRequest Clone() {
      return new GetUsersRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Security.API.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firstname" field.</summary>
    public const int FirstnameFieldNumber = 3;
    private string firstname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Firstname {
      get { return firstname_; }
      set {
        firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastname" field.</summary>
    public const int LastnameFieldNumber = 4;
    private string lastname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lastname {
      get { return lastname_; }
      set {
        lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 5;
    private global::Security.API.UUID customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }

    /// <summary>Field number for the "statusId" field.</summary>
    public const int StatusIdFieldNumber = 6;
    private int statusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusId {
      get { return statusId_; }
      set {
        statusId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUsersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUsersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Username != other.Username) return false;
      if (Firstname != other.Firstname) return false;
      if (Lastname != other.Lastname) return false;
      if (!object.Equals(CustomerId, other.CustomerId)) return false;
      if (StatusId != other.StatusId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
      if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (StatusId != 0) hash ^= StatusId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Lastname);
      }
      if (customerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CustomerId);
      }
      if (StatusId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(StatusId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Firstname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
      }
      if (Lastname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
      }
      if (customerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomerId);
      }
      if (StatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUsersRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Security.API.UUID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Firstname.Length != 0) {
        Firstname = other.Firstname;
      }
      if (other.Lastname.Length != 0) {
        Lastname = other.Lastname;
      }
      if (other.customerId_ != null) {
        if (customerId_ == null) {
          customerId_ = new global::Security.API.UUID();
        }
        CustomerId.MergeFrom(other.CustomerId);
      }
      if (other.StatusId != 0) {
        StatusId = other.StatusId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Security.API.UUID();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Firstname = input.ReadString();
            break;
          }
          case 34: {
            Lastname = input.ReadString();
            break;
          }
          case 42: {
            if (customerId_ == null) {
              customerId_ = new global::Security.API.UUID();
            }
            input.ReadMessage(customerId_);
            break;
          }
          case 48: {
            StatusId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUsersResponse : pb::IMessage<GetUsersResponse> {
    private static readonly pb::MessageParser<GetUsersResponse> _parser = new pb::MessageParser<GetUsersResponse>(() => new GetUsersResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUsersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersResponse(GetUsersResponse other) : this() {
      users_ = other.users_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUsersResponse Clone() {
      return new GetUsersResponse(this);
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Security.API.User> _repeated_users_codec
        = pb::FieldCodec.ForMessage(10, global::Security.API.User.Parser);
    private readonly pbc::RepeatedField<global::Security.API.User> users_ = new pbc::RepeatedField<global::Security.API.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Security.API.User> Users {
      get { return users_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUsersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUsersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!users_.Equals(other.users_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= users_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      users_.WriteTo(output, _repeated_users_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += users_.CalculateSize(_repeated_users_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUsersResponse other) {
      if (other == null) {
        return;
      }
      users_.Add(other.users_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserRequest : pb::IMessage<AddUserRequest> {
    private static readonly pb::MessageParser<AddUserRequest> _parser = new pb::MessageParser<AddUserRequest>(() => new AddUserRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest(AddUserRequest other) : this() {
      username_ = other.username_;
      firstname_ = other.firstname_;
      lastname_ = other.lastname_;
      CustomerId = other.customerId_ != null ? other.CustomerId.Clone() : null;
      statusId_ = other.statusId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest Clone() {
      return new AddUserRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firstname" field.</summary>
    public const int FirstnameFieldNumber = 2;
    private string firstname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Firstname {
      get { return firstname_; }
      set {
        firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastname" field.</summary>
    public const int LastnameFieldNumber = 3;
    private string lastname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lastname {
      get { return lastname_; }
      set {
        lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 4;
    private global::Security.API.UUID customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }

    /// <summary>Field number for the "statusId" field.</summary>
    public const int StatusIdFieldNumber = 5;
    private int statusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusId {
      get { return statusId_; }
      set {
        statusId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Firstname != other.Firstname) return false;
      if (Lastname != other.Lastname) return false;
      if (!object.Equals(CustomerId, other.CustomerId)) return false;
      if (StatusId != other.StatusId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
      if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (StatusId != 0) hash ^= StatusId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lastname);
      }
      if (customerId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CustomerId);
      }
      if (StatusId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StatusId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Firstname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
      }
      if (Lastname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
      }
      if (customerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomerId);
      }
      if (StatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Firstname.Length != 0) {
        Firstname = other.Firstname;
      }
      if (other.Lastname.Length != 0) {
        Lastname = other.Lastname;
      }
      if (other.customerId_ != null) {
        if (customerId_ == null) {
          customerId_ = new global::Security.API.UUID();
        }
        CustomerId.MergeFrom(other.CustomerId);
      }
      if (other.StatusId != 0) {
        StatusId = other.StatusId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Firstname = input.ReadString();
            break;
          }
          case 26: {
            Lastname = input.ReadString();
            break;
          }
          case 34: {
            if (customerId_ == null) {
              customerId_ = new global::Security.API.UUID();
            }
            input.ReadMessage(customerId_);
            break;
          }
          case 40: {
            StatusId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserResponse : pb::IMessage<AddUserResponse> {
    private static readonly pb::MessageParser<AddUserResponse> _parser = new pb::MessageParser<AddUserResponse>(() => new AddUserResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse(AddUserResponse other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse Clone() {
      return new AddUserResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Security.API.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Security.API.UUID();
        }
        Id.MergeFrom(other.Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Security.API.UUID();
            }
            input.ReadMessage(id_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      Id = other.id_ != null ? other.Id.Clone() : null;
      username_ = other.username_;
      firstname_ = other.firstname_;
      lastname_ = other.lastname_;
      CustomerId = other.customerId_ != null ? other.CustomerId.Clone() : null;
      statusId_ = other.statusId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Security.API.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firstname" field.</summary>
    public const int FirstnameFieldNumber = 3;
    private string firstname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Firstname {
      get { return firstname_; }
      set {
        firstname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastname" field.</summary>
    public const int LastnameFieldNumber = 4;
    private string lastname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lastname {
      get { return lastname_; }
      set {
        lastname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 5;
    private global::Security.API.UUID customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Security.API.UUID CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }

    /// <summary>Field number for the "statusId" field.</summary>
    public const int StatusIdFieldNumber = 6;
    private int statusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusId {
      get { return statusId_; }
      set {
        statusId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Username != other.Username) return false;
      if (Firstname != other.Firstname) return false;
      if (Lastname != other.Lastname) return false;
      if (!object.Equals(CustomerId, other.CustomerId)) return false;
      if (StatusId != other.StatusId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Firstname.Length != 0) hash ^= Firstname.GetHashCode();
      if (Lastname.Length != 0) hash ^= Lastname.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (StatusId != 0) hash ^= StatusId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Firstname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Firstname);
      }
      if (Lastname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Lastname);
      }
      if (customerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CustomerId);
      }
      if (StatusId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(StatusId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Firstname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Firstname);
      }
      if (Lastname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lastname);
      }
      if (customerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomerId);
      }
      if (StatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Security.API.UUID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Firstname.Length != 0) {
        Firstname = other.Firstname;
      }
      if (other.Lastname.Length != 0) {
        Lastname = other.Lastname;
      }
      if (other.customerId_ != null) {
        if (customerId_ == null) {
          customerId_ = new global::Security.API.UUID();
        }
        CustomerId.MergeFrom(other.CustomerId);
      }
      if (other.StatusId != 0) {
        StatusId = other.StatusId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Security.API.UUID();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Firstname = input.ReadString();
            break;
          }
          case 34: {
            Lastname = input.ReadString();
            break;
          }
          case 42: {
            if (customerId_ == null) {
              customerId_ = new global::Security.API.UUID();
            }
            input.ReadMessage(customerId_);
            break;
          }
          case 48: {
            StatusId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UUID : pb::IMessage<UUID> {
    private static readonly pb::MessageParser<UUID> _parser = new pb::MessageParser<UUID>(() => new UUID());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Security.API.SecurityReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UUID(UUID other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UUID Clone() {
      return new UUID(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UUID other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
